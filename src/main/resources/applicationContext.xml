<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

    <!--通常情况下我们在创建 spring 项目的时候在 xml 配置文件中都会配置这个标签，配置完这个标签后，
    spring 就会去自动扫描 base-package 对应的路径或者该路径的子包下面的 java 文件，
    如果扫描到文件中带有 @Service,@Component,@Repository,@Controller 等这些注解的类，则把这些类注册为 bean-->
    <!--二期：不扫controller-->
    <context:component-scan base-package="com.mmall" annotation-config="true">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>


    <!--<context:annotation-config/>作用：对已经注册的bean进行激活，并操作。上面已经有了，所以不写-->
    <aop:aspectj-autoproxy/>

    <!--二期：spring session新增-->
    <context:property-placeholder location="classpath:datasource.properties"/>
    <task:annotation-driven/>


    <import resource="applicationContext-datasource.xml"/>
    <import resource="applicationContext-spring-session.xml"/>


</beans>